ansible-playbook 2.8.5
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/site-packages/ansible
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.6.8 (default, Jul  1 2019, 16:43:04) [GCC 8.2.1 20180905 (Red Hat 8.2.1-3)]
No config file found; using defaults
host_list declined parsing /root/vSphere-Ansible/inventory.yml as it did not pass it's verify_file() method
script declined parsing /root/vSphere-Ansible/inventory.yml as it did not pass it's verify_file() method
Parsed /root/vSphere-Ansible/inventory.yml inventory source with yaml plugin

PLAYBOOK: site.yml **********************************************************************************************************************************************************************************************************************************
5 plays in site.yml

PLAY [vcsa] *****************************************************************************************************************************************************************************************************************************************
META: ran handlers

TASK [vCenter-Datacenter : Create Datacenter] *******************************************************************************************************************************************************************************************************
task path: /root/vSphere-Ansible/roles/vCenter-Datacenter/tasks/main.yml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112823.442537-266209504425397 `" && echo ansible-tmp-1571112823.442537-266209504425397="` echo /root/.ansible/tmp/ansible-tmp-1571112823.442537-266209504425397 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_datacenter.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpbgejdn_5 TO /root/.ansible/tmp/ansible-tmp-1571112823.442537-266209504425397/AnsiballZ_vmware_datacenter.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112823.442537-266209504425397/ /root/.ansible/tmp/ansible-tmp-1571112823.442537-266209504425397/AnsiballZ_vmware_datacenter.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112823.442537-266209504425397/AnsiballZ_vmware_datacenter.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112823.442537-266209504425397/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "datacenter_name": "Datacenter1",
            "hostname": "192.168.1.254",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false
        }
    }
}

TASK [vCenter-Cluster : Create Cluster] *************************************************************************************************************************************************************************************************************
task path: /root/vSphere-Ansible/roles/vCenter-Cluster/tasks/main.yml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112824.2497475-79277656194559 `" && echo ansible-tmp-1571112824.2497475-79277656194559="` echo /root/.ansible/tmp/ansible-tmp-1571112824.2497475-79277656194559 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_cluster.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpx7fk6wdb TO /root/.ansible/tmp/ansible-tmp-1571112824.2497475-79277656194559/AnsiballZ_vmware_cluster.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112824.2497475-79277656194559/ /root/.ansible/tmp/ansible-tmp-1571112824.2497475-79277656194559/AnsiballZ_vmware_cluster.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112824.2497475-79277656194559/AnsiballZ_vmware_cluster.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112824.2497475-79277656194559/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "cluster_name": "Cluster",
            "datacenter": "Datacenter1",
            "datacenter_name": "Datacenter1",
            "drs_default_vm_behavior": "fullyAutomated",
            "drs_enable_vm_behavior_overrides": true,
            "drs_vmotion_rate": 3,
            "enable_drs": true,
            "enable_ha": false,
            "enable_vsan": true,
            "ha_admission_control_enabled": true,
            "ha_failover_level": 2,
            "ha_host_monitoring": "enabled",
            "ha_restart_priority": "medium",
            "ha_vm_failure_interval": 30,
            "ha_vm_max_failure_window": -1,
            "ha_vm_max_failures": 3,
            "ha_vm_min_up_time": 120,
            "ha_vm_monitoring": "vmMonitoringDisabled",
            "hostname": "192.168.1.254",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false,
            "vsan_auto_claim_storage": true
        }
    },
    "result": null
}
META: ran handlers
META: ran handlers

PLAY [esxi] *****************************************************************************************************************************************************************************************************************************************
META: ran handlers

TASK [ESXi-add_host : Add ESXi Host to vCenter] *****************************************************************************************************************************************************************************************************
task path: /root/vSphere-Ansible/roles/ESXi-add_host/tasks/main.yml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112825.1511364-182485028841973 `" && echo ansible-tmp-1571112825.1511364-182485028841973="` echo /root/.ansible/tmp/ansible-tmp-1571112825.1511364-182485028841973 `" ) && sleep 0'
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112825.199599-142773215849148 `" && echo ansible-tmp-1571112825.199599-142773215849148="` echo /root/.ansible/tmp/ansible-tmp-1571112825.199599-142773215849148 `" ) && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112825.222627-75380790671020 `" && echo ansible-tmp-1571112825.222627-75380790671020="` echo /root/.ansible/tmp/ansible-tmp-1571112825.222627-75380790671020 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_host.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmp9mevtu1r TO /root/.ansible/tmp/ansible-tmp-1571112825.199599-142773215849148/AnsiballZ_vmware_host.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112825.199599-142773215849148/ /root/.ansible/tmp/ansible-tmp-1571112825.199599-142773215849148/AnsiballZ_vmware_host.py && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_host.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpg0mc_ggm TO /root/.ansible/tmp/ansible-tmp-1571112825.222627-75380790671020/AnsiballZ_vmware_host.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112825.222627-75380790671020/ /root/.ansible/tmp/ansible-tmp-1571112825.222627-75380790671020/AnsiballZ_vmware_host.py && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_host.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpyiu50yrl TO /root/.ansible/tmp/ansible-tmp-1571112825.1511364-182485028841973/AnsiballZ_vmware_host.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112825.1511364-182485028841973/ /root/.ansible/tmp/ansible-tmp-1571112825.1511364-182485028841973/AnsiballZ_vmware_host.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112825.199599-142773215849148/AnsiballZ_vmware_host.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112825.222627-75380790671020/AnsiballZ_vmware_host.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112825.1511364-182485028841973/AnsiballZ_vmware_host.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112825.222627-75380790671020/ > /dev/null 2>&1 && sleep 0'
ok: [esxi03 -> localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "add_connected": true,
            "cluster_name": "Cluster",
            "datacenter": "Datacenter1",
            "datacenter_name": "Datacenter1",
            "esxi_hostname": "192.168.1.203",
            "esxi_password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "esxi_ssl_thumbprint": "",
            "esxi_username": "root",
            "fetch_ssl_thumbprint": true,
            "folder": null,
            "force_connection": true,
            "hostname": "192.168.1.254",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "reconnect_disconnected": true,
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false
        }
    },
    "result": "Host already connected to vCenter '192.168.1.254' in cluster 'Cluster'"
}
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112825.199599-142773215849148/ > /dev/null 2>&1 && sleep 0'
ok: [esxi02 -> localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "add_connected": true,
            "cluster_name": "Cluster",
            "datacenter": "Datacenter1",
            "datacenter_name": "Datacenter1",
            "esxi_hostname": "192.168.1.202",
            "esxi_password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "esxi_ssl_thumbprint": "",
            "esxi_username": "root",
            "fetch_ssl_thumbprint": true,
            "folder": null,
            "force_connection": true,
            "hostname": "192.168.1.254",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "reconnect_disconnected": true,
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false
        }
    },
    "result": "Host already connected to vCenter '192.168.1.254' in cluster 'Cluster'"
}
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112825.1511364-182485028841973/ > /dev/null 2>&1 && sleep 0'
ok: [esxi01 -> localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "add_connected": true,
            "cluster_name": "Cluster",
            "datacenter": "Datacenter1",
            "datacenter_name": "Datacenter1",
            "esxi_hostname": "192.168.1.201",
            "esxi_password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "esxi_ssl_thumbprint": "",
            "esxi_username": "root",
            "fetch_ssl_thumbprint": true,
            "folder": null,
            "force_connection": true,
            "hostname": "192.168.1.254",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "reconnect_disconnected": true,
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false
        }
    },
    "result": "Host already connected to vCenter '192.168.1.254' in cluster 'Cluster'"
}
META: ran handlers
META: ran handlers

PLAY [vcsa] *****************************************************************************************************************************************************************************************************************************************
META: ran handlers

TASK [vCenter-Portgroup : Add Management Network VM] ************************************************************************************************************************************************************************************************
task path: /root/vSphere-Ansible/roles/vCenter-Portgroup/tasks/main.yml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112826.5737514-212543638960572 `" && echo ansible-tmp-1571112826.5737514-212543638960572="` echo /root/.ansible/tmp/ansible-tmp-1571112826.5737514-212543638960572 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_portgroup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpjzkl60mv TO /root/.ansible/tmp/ansible-tmp-1571112826.5737514-212543638960572/AnsiballZ_vmware_portgroup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112826.5737514-212543638960572/ /root/.ansible/tmp/ansible-tmp-1571112826.5737514-212543638960572/AnsiballZ_vmware_portgroup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112826.5737514-212543638960572/AnsiballZ_vmware_portgroup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112826.5737514-212543638960572/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => (item={'pg_name': 'VM Network', 'vswitch': 'vSwitch0', 'vlan_id': 0, 'state': 'present'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "invocation": {
        "module_args": {
            "cluster_name": "Cluster",
            "hostname": "192.168.1.254",
            "hosts": null,
            "network_policy": {
                "forged_transmits": false,
                "mac_changes": false,
                "promiscuous_mode": false
            },
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "portgroup_name": "VM Network",
            "state": "present",
            "switch_name": "vSwitch0",
            "teaming_policy": {
                "inbound_policy": false,
                "load_balance_policy": "loadbalance_srcid",
                "notify_switches": true,
                "rolling_order": false
            },
            "username": "administrator@nyancat.local",
            "validate_certs": false,
            "vlan_id": 0
        }
    },
    "item": {
        "pg_name": "VM Network",
        "state": "present",
        "vlan_id": 0,
        "vswitch": "vSwitch0"
    },
    "result": {
        "192.168.1.201": {
            "portgroup_name": "VM Network",
            "switch_name": "vSwitch0",
            "vlan_id": 0
        },
        "192.168.1.202": {
            "portgroup_name": "VM Network",
            "switch_name": "vSwitch0",
            "vlan_id": 0
        },
        "192.168.1.203": {
            "portgroup_name": "VM Network",
            "switch_name": "vSwitch0",
            "vlan_id": 0
        }
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112828.8984501-60374945874263 `" && echo ansible-tmp-1571112828.8984501-60374945874263="` echo /root/.ansible/tmp/ansible-tmp-1571112828.8984501-60374945874263 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_portgroup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmp49hnl_s9 TO /root/.ansible/tmp/ansible-tmp-1571112828.8984501-60374945874263/AnsiballZ_vmware_portgroup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112828.8984501-60374945874263/ /root/.ansible/tmp/ansible-tmp-1571112828.8984501-60374945874263/AnsiballZ_vmware_portgroup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112828.8984501-60374945874263/AnsiballZ_vmware_portgroup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112828.8984501-60374945874263/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => (item={'pg_name': 'Default', 'vswitch': 'vSwitch0', 'vlan_id': 1, 'state': 'present'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "invocation": {
        "module_args": {
            "cluster_name": "Cluster",
            "hostname": "192.168.1.254",
            "hosts": null,
            "network_policy": {
                "forged_transmits": false,
                "mac_changes": false,
                "promiscuous_mode": false
            },
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "portgroup_name": "Default",
            "state": "present",
            "switch_name": "vSwitch0",
            "teaming_policy": {
                "inbound_policy": false,
                "load_balance_policy": "loadbalance_srcid",
                "notify_switches": true,
                "rolling_order": false
            },
            "username": "administrator@nyancat.local",
            "validate_certs": false,
            "vlan_id": 1
        }
    },
    "item": {
        "pg_name": "Default",
        "state": "present",
        "vlan_id": 1,
        "vswitch": "vSwitch0"
    },
    "result": {
        "192.168.1.201": {
            "portgroup_name": "Default",
            "switch_name": "vSwitch0",
            "vlan_id": 1
        },
        "192.168.1.202": {
            "portgroup_name": "Default",
            "switch_name": "vSwitch0",
            "vlan_id": 1
        },
        "192.168.1.203": {
            "portgroup_name": "Default",
            "switch_name": "vSwitch0",
            "vlan_id": 1
        }
    }
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112831.0967681-279825344720378 `" && echo ansible-tmp-1571112831.0967681-279825344720378="` echo /root/.ansible/tmp/ansible-tmp-1571112831.0967681-279825344720378 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_portgroup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmprzv20zd_ TO /root/.ansible/tmp/ansible-tmp-1571112831.0967681-279825344720378/AnsiballZ_vmware_portgroup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112831.0967681-279825344720378/ /root/.ansible/tmp/ansible-tmp-1571112831.0967681-279825344720378/AnsiballZ_vmware_portgroup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112831.0967681-279825344720378/AnsiballZ_vmware_portgroup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112831.0967681-279825344720378/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => (item={'pg_name': 'test_sw', 'vswitch': 'vSwitch0', 'vlan_id': 1, 'state': 'absent'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "invocation": {
        "module_args": {
            "cluster_name": "Cluster",
            "hostname": "192.168.1.254",
            "hosts": null,
            "network_policy": {
                "forged_transmits": false,
                "mac_changes": false,
                "promiscuous_mode": false
            },
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "portgroup_name": "test_sw",
            "state": "absent",
            "switch_name": "vSwitch0",
            "teaming_policy": {
                "inbound_policy": false,
                "load_balance_policy": "loadbalance_srcid",
                "notify_switches": true,
                "rolling_order": false
            },
            "username": "administrator@nyancat.local",
            "validate_certs": false,
            "vlan_id": 1
        }
    },
    "item": {
        "pg_name": "test_sw",
        "state": "absent",
        "vlan_id": 1,
        "vswitch": "vSwitch0"
    },
    "result": {
        "192.168.1.201": {
            "portgroup_name": "test_sw",
            "switch_name": "vSwitch0",
            "vlan_id": 1
        },
        "192.168.1.202": {
            "portgroup_name": "test_sw",
            "switch_name": "vSwitch0",
            "vlan_id": 1
        },
        "192.168.1.203": {
            "portgroup_name": "test_sw",
            "switch_name": "vSwitch0",
            "vlan_id": 1
        }
    }
}

TASK [vCenter-ResourcePool : Add resource pool to vCenter] ******************************************************************************************************************************************************************************************
task path: /root/vSphere-Ansible/roles/vCenter-ResourcePool/tasks/main.yml:1
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112835.2852092-272430732145620 `" && echo ansible-tmp-1571112835.2852092-272430732145620="` echo /root/.ansible/tmp/ansible-tmp-1571112835.2852092-272430732145620 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_resource_pool.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpfecvltqz TO /root/.ansible/tmp/ansible-tmp-1571112835.2852092-272430732145620/AnsiballZ_vmware_resource_pool.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112835.2852092-272430732145620/ /root/.ansible/tmp/ansible-tmp-1571112835.2852092-272430732145620/AnsiballZ_vmware_resource_pool.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112835.2852092-272430732145620/AnsiballZ_vmware_resource_pool.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112835.2852092-272430732145620/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => (item={'name': 'Critical'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "invocation": {
        "module_args": {
            "cluster": "Cluster",
            "cpu_expandable_reservations": true,
            "cpu_limit": -1,
            "cpu_reservation": 0,
            "cpu_shares": "normal",
            "datacenter": "Datacenter1",
            "hostname": "192.168.1.254",
            "mem_expandable_reservations": true,
            "mem_limit": -1,
            "mem_reservation": 0,
            "mem_shares": "normal",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "resource_pool": "Critical",
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false
        }
    },
    "item": {
        "name": "Critical"
    }
}

TASK [vCenter-Folder : Create vm folders on given datacenter] ***************************************************************************************************************************************************************************************
task path: /root/vSphere-Ansible/roles/vCenter-Folder/tasks/main.yml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112836.7509077-130947281061756 `" && echo ansible-tmp-1571112836.7509077-130947281061756="` echo /root/.ansible/tmp/ansible-tmp-1571112836.7509077-130947281061756 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vcenter_folder.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpz1h72f0a TO /root/.ansible/tmp/ansible-tmp-1571112836.7509077-130947281061756/AnsiballZ_vcenter_folder.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112836.7509077-130947281061756/ /root/.ansible/tmp/ansible-tmp-1571112836.7509077-130947281061756/AnsiballZ_vcenter_folder.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112836.7509077-130947281061756/AnsiballZ_vcenter_folder.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112836.7509077-130947281061756/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => (item={'name': 'VirtualMachine', 'type': 'vm', 'state': 'present'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "invocation": {
        "module_args": {
            "datacenter": "Datacenter1",
            "datacenter_name": "Datacenter1",
            "folder_name": "VirtualMachine",
            "folder_type": "vm",
            "hostname": "192.168.1.254",
            "parent_folder": null,
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false
        }
    },
    "item": {
        "name": "VirtualMachine",
        "state": "present",
        "type": "vm"
    },
    "result": "Folder VirtualMachine already exists"
}
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112837.6624563-80266926960937 `" && echo ansible-tmp-1571112837.6624563-80266926960937="` echo /root/.ansible/tmp/ansible-tmp-1571112837.6624563-80266926960937 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vcenter_folder.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpnh26egdn TO /root/.ansible/tmp/ansible-tmp-1571112837.6624563-80266926960937/AnsiballZ_vcenter_folder.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112837.6624563-80266926960937/ /root/.ansible/tmp/ansible-tmp-1571112837.6624563-80266926960937/AnsiballZ_vcenter_folder.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112837.6624563-80266926960937/AnsiballZ_vcenter_folder.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112837.6624563-80266926960937/ > /dev/null 2>&1 && sleep 0'
ok: [vcsa -> localhost] => (item={'name': 'Templates', 'type': 'vm', 'state': 'present'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "invocation": {
        "module_args": {
            "datacenter": "Datacenter1",
            "datacenter_name": "Datacenter1",
            "folder_name": "Templates",
            "folder_type": "vm",
            "hostname": "192.168.1.254",
            "parent_folder": null,
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": 443,
            "state": "present",
            "username": "administrator@nyancat.local",
            "validate_certs": false
        }
    },
    "item": {
        "name": "Templates",
        "state": "present",
        "type": "vm"
    },
    "result": "Folder Templates already exists"
}

TASK [vCenter-DeployOVA : Deploy Master Image] ******************************************************************************************************************************************************************************************************
task path: /root/vSphere-Ansible/roles/vCenter-DeployOVA/tasks/main.yml:2
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205 `" && echo ansible-tmp-1571112838.3611135-214219065657205="` echo /root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205 `" ) && sleep 0'
Using module file /usr/local/lib/python3.6/site-packages/ansible/modules/cloud/vmware/vmware_deploy_ovf.py
<localhost> PUT /root/.ansible/tmp/ansible-local-37851nx18bw92/tmpiybndnd7 TO /root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/ /root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.6 /root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
Traceback (most recent call last):
  File "/root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py", line 114, in <module>
    _ansiballz_main()
  File "/root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py", line 106, in _ansiballz_main
    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)
  File "/root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py", line 49, in invoke_module
    imp.load_module('__main__', mod, module, MOD_DESC)
  File "/usr/lib64/python3.6/imp.py", line 235, in load_module
    return load_source(name, filename, file)
  File "/usr/lib64/python3.6/imp.py", line 170, in load_source
    module = _exec(spec, sys.modules[name])
  File "<frozen importlib._bootstrap>", line 618, in _exec
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/tmp/ansible_vmware_deploy_ovf_payload_oe22i_m5/__main__.py", line 678, in <module>
  File "/tmp/ansible_vmware_deploy_ovf_payload_oe22i_m5/__main__.py", line 670, in main
  File "/tmp/ansible_vmware_deploy_ovf_payload_oe22i_m5/__main__.py", line 515, in upload
  File "/usr/local/lib/python3.6/site-packages/pyVmomi/VmomiSupport.py", line 706, in <lambda>
    self.f(*(self.args + (obj,) + args), **kwargs)
  File "/usr/local/lib/python3.6/site-packages/pyVmomi/VmomiSupport.py", line 512, in _InvokeMethod
    return self._stub.InvokeMethod(self, info, args)
  File "/usr/local/lib/python3.6/site-packages/pyVmomi/SoapAdapter.py", line 1351, in InvokeMethod
    resp = conn.getresponse()
  File "/usr/lib64/python3.6/http/client.py", line 1331, in getresponse
    response.begin()
  File "/usr/lib64/python3.6/http/client.py", line 297, in begin
    version, status, reason = self._read_status()
  File "/usr/lib64/python3.6/http/client.py", line 266, in _read_status
    raise RemoteDisconnected("Remote end closed connection without"
http.client.RemoteDisconnected: Remote end closed connection without response
failed: [vcsa -> localhost] (item={'template': 'WindowsServer2016', 'image_path': './ova/WindowsServer2016.ovf'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "image_path": "./ova/WindowsServer2016.ovf",
        "template": "WindowsServer2016"
    },
    "module_stderr": "Traceback (most recent call last):\n  File \"/root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py\", line 114, in <module>\n    _ansiballz_main()\n  File \"/root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py\", line 106, in _ansiballz_main\n    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)\n  File \"/root/.ansible/tmp/ansible-tmp-1571112838.3611135-214219065657205/AnsiballZ_vmware_deploy_ovf.py\", line 49, in invoke_module\n    imp.load_module('__main__', mod, module, MOD_DESC)\n  File \"/usr/lib64/python3.6/imp.py\", line 235, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.6/imp.py\", line 170, in load_source\n    module = _exec(spec, sys.modules[name])\n  File \"<frozen importlib._bootstrap>\", line 618, in _exec\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"/tmp/ansible_vmware_deploy_ovf_payload_oe22i_m5/__main__.py\", line 678, in <module>\n  File \"/tmp/ansible_vmware_deploy_ovf_payload_oe22i_m5/__main__.py\", line 670, in main\n  File \"/tmp/ansible_vmware_deploy_ovf_payload_oe22i_m5/__main__.py\", line 515, in upload\n  File \"/usr/local/lib/python3.6/site-packages/pyVmomi/VmomiSupport.py\", line 706, in <lambda>\n    self.f(*(self.args + (obj,) + args), **kwargs)\n  File \"/usr/local/lib/python3.6/site-packages/pyVmomi/VmomiSupport.py\", line 512, in _InvokeMethod\n    return self._stub.InvokeMethod(self, info, args)\n  File \"/usr/local/lib/python3.6/site-packages/pyVmomi/SoapAdapter.py\", line 1351, in InvokeMethod\n    resp = conn.getresponse()\n  File \"/usr/lib64/python3.6/http/client.py\", line 1331, in getresponse\n    response.begin()\n  File \"/usr/lib64/python3.6/http/client.py\", line 297, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/lib64/python3.6/http/client.py\", line 266, in _read_status\n    raise RemoteDisconnected(\"Remote end closed connection without\"\nhttp.client.RemoteDisconnected: Remote end closed connection without response\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}

PLAY RECAP ******************************************************************************************************************************************************************************************************************************************
esxi01                     : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
esxi02                     : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
esxi03                     : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
vcsa                       : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

